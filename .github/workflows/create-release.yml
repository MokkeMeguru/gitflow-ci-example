name: Create Release PRs
on:
  workflow_dispatch:
    inputs:
      releaseDate:
        description: "Release Date: YYYYMMDD"
        required: true
      title:
        description: "PR Title"
        required: true

jobs:
  create_release_prs:
    name: Create Release Branch and PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v3
        with:
          ref: "develop"
          fetch-depth: 0
      - name: Validate release date
        uses: actions/github-script@v7
        with:
          script: |
            const releaseDateStr = "${{inputs.releaseDate}}";
            if (!/^(\d){8}$/.test(releaseDateStr)) {
              core.setFailed(`invalid date format yyyymmdd: ${releaseDateStr}`)
            }
            const y = releaseDateStr.substr(0,4), m = releaseDateStr.substr(4,2) - 1, d = releaseDateStr.substr(6,2);
            const releaseDate = new Date(y, m, d);
            if (isNaN(releaseDate.getDate())) {
              core.setFailed(`invalid date format yyyymmdd: ${releaseDateStr}`);
            }
            const dy = releaseDate.getFullYear(), dm = ("00" + (releaseDate.getMonth()+1)).slice(-2), dd = ("00" + (releaseDate.getDate())).slice(-2);
            if (releaseDateStr !== dy+dm+dd) {
              core.setFailed(`invalid date format yyyymmdd: ${releaseDateStr}`);
            }

      - name: Fetch release PR list
        id: fetch-release-prlist
        run: |
          git log --merges --grep='Merge pull request' --format='%B' remotes/origin/main...develop --pretty="%an|%s" > pr_list.txt
      - uses: actions/setup-go@v5
        with:
          go-version-file: "./.github/scripts/go.mod"
          cache-dependency-path: "./.github/scripts/go.sum"
      - name: Create Release PR Body
        id: create-release-pr-body
        run: |
          echo "prBody<<EOF" >> $GITHUB_OUTPUT
          go run ./main.go createReleasePrBody ../../pr_list.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        working-directory: ./.github/scripts
      - name: Remove temporary file
        run: rm -rf ./pr_list.txt
      - name: Set commit user
        run: |
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config user.name  "[bot] ${GITHUB_ACTOR}"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Create release branch
        run: |
          DATETIME_SUFFIX=$(date "+%Y%m%d%H%M")
          releaseBranch="release/${{ github.event.inputs.releaseDate }}-${GITHUB_ACTOR}-${DATETIME_SUFFIX}"
          git checkout -b "$releaseBranch"
          git commit --allow-empty -m "[release] empty commit for $releaseBranch"
          git push origin "$releaseBranch"
          echo "RELEASE_BRANCH=$releaseBranch" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ github.token }}

      - name: create release pr
        run: |
          gh pr create --base main --title "${{ github.event.inputs.title }}" --body "${{ steps.create-release-pr-body.outputs.prBody }}"
        env:
          GH_TOKEN: ${{ github.token }}

