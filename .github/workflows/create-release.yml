name: "Create Release PR"

on:
  workflow_dispatch:
    inputs:
      releaseDate:
        description: "Release Date: YYYYMMDD"
        required: true
      title:
        description: "PR Title"
        required: true

jobs:
  create_release_pr:
    name: Create Release Branch and PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "develop"
          fetch-depth: 0

      - name: Validate release date
        uses: ./.github/actions/validate-yyyymmdd
        with:
          date: ${{ inputs.releaseDate }}

      - name: Fetch release PR list
        id: fetch-release-prlist
        run: |
          git log --merges --grep='Merge pull request' --format='%B' remotes/origin/main...develop --pretty="%an|%s" > pr_list.txt

      - uses: ./.github/actions/create-release-pr-body
        id: create-release-pr-body
        with:
          pr-list-path: ./pr_list.txt
      - name: Remove temporary file
        run: rm -rf ./pr_list.txt

      - name: Set commit user
        run: |
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config user.name  "[bot] ${GITHUB_ACTOR}"

      - name: Create release branch
        id: create-release-branch
        run: |
          DATETIME_SUFFIX=$(date "+%Y%m%d%H%M")
          releaseBranch="release/${{ github.event.inputs.releaseDate }}-${GITHUB_ACTOR}-${DATETIME_SUFFIX}"
          git checkout -b "$releaseBranch"
          git commit --allow-empty -m "[release] empty commit for $releaseBranch"
          echo "releaseBranch=${releaseBranch}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run post release script
        run: |
          SCRIPT_PATH="./.github/config/post-release-script.sh"
          if [ -f "$SCRIPT_PATH" ]; then
            chmod +x "$SCRIPT_PATH"
            ./"$SCRIPT_PATH"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push release branch
        run: |
          git push origin "${{ steps.create-release-branch.outputs.releaseBranch }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release PR
        run: |
          gh pr create --base main --title "${{ github.event.inputs.title }}" --body "${{ steps.create-release-pr-body.outputs.prBody }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
