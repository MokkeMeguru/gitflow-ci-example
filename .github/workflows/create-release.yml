name: Create Release PRs
on:
  workflow_dispatch:
    inputs:
      releaseDate:
        description: "リリース日 YYYYMMDD"
        required: true
      title:
        description: "PRのタイトル"
        required: true

jobs:
  create_release_prs:
    name: Create Release Branch and PRs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v3
        with:
          ref: "develop"

      - name: Validate release date
        uses: actions/github-script@v7
        with:
          script: |
            const releaseDateStr = github.event.inputs.releaseDate;
            const releaseDate = new Date(releaseDateStr);
            if (isNaN(date.getDate())) {
              core.setFailed(`invalid date format yyyymmdd: ${releaseDateStr}`);
            }
            const y = dt.getFullYear();
            const m = ("00" + (dt.getMonth()+1)).slice(-2);
            const d = ("00" + (dt.getDate())).slice(-2);
            if (releaseDateStr !== y  + m +  d) {
              core.setFailed(`invalid date format yyyymmdd: ${releaseDateStr}`);
            }

      - name: Set commit user
        run: |
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config user.name  "[bot] ${GITHUB_ACTOR}"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Create release branch
        run: |
          DATETIME_SUFFIX=$(date "+%Y%m%d%H%M")
          releaseBranch="release/${{ github.event.inputs.releaseDate }}-${GITHUB_ACTOR}-${DATETIME_SUFFIX}"
          git checkout -b "$releaseBranch"
          git commit --allow-empty -m "[release] empty commit for $releaseBranch"
          git push origin "$releaseBranch"
          echo "RELEASE_BRANCH=$releaseBranch" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ github.token }}

      - name: create release pr
        run: |
          gh pr create -B main -t "${{ github.event.inputs.title }}" -b "release main"
        env:
          GH_TOKEN: ${{ github.token }}
