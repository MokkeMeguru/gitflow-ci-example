name: Create Release Branch

on:
  workflow_call:
    inputs:
      releaseDate:
        description: "Release Date: YYYYMMDD"
        required: true
        type: string
      title:
        description: "PR Title"
        required: true
        type: strin
    outputs:
      releaseBranch:
        description: "Release Branch Name"
        value: ${{ jobs.create_release.outputs.body }}
        type: string

jobs:
  create_release:
    name: Create Release Branch
    runs-on: ubuntu-latest
    outputs:
      releaseBranch: ${{ steps.create-release-branch.outputs.releaseBranch }}
    steps:
      - name: Validate release date
        uses: actions/github-script@v7
        with:
          script: |
            const releaseDateStr = "${{inputs.releaseDate}}";
            if (!/^(\d){8}$/.test(releaseDateStr)) {
              core.setFailed(`invalid date format yyyymmdd: ${releaseDateStr}`)
            }
            const y = releaseDateStr.substr(0,4), m = releaseDateStr.substr(4,2) - 1, d = releaseDateStr.substr(6,2);
            const releaseDate = new Date(y, m, d);
            if (isNaN(releaseDate.getDate())) {
              core.setFailed(`invalid date format yyyymmdd: ${releaseDateStr}`);
            }
            const dy = releaseDate.getFullYear(), dm = ("00" + (releaseDate.getMonth()+1)).slice(-2), dd = ("00" + (releaseDate.getDate())).slice(-2);
            if (releaseDateStr !== dy+dm+dd) {
              core.setFailed(`invalid date format yyyymmdd: ${releaseDateStr}`);
            }

      - name: Set commit user
        run: |
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config user.name  "[bot] ${GITHUB_ACTOR}"

      - name: Create release branch
        id: create-release-branch
        run: |
          DATETIME_SUFFIX=$(date "+%Y%m%d%H%M")
          releaseBranch="release/${{ github.event.inputs.releaseDate }}-${GITHUB_ACTOR}-${DATETIME_SUFFIX}"
          git checkout -b "$releaseBranch"
          git commit --allow-empty -m "[release] empty commit for $releaseBranch"
          echo "releaseBranch=${releaseBranch}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
